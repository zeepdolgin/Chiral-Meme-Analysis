reddit_mention_counts <- reddit_mentions %>%
group_by(post_date, stock_mention) %>%
count()
# false positives (non-stock related):
fp <- c("RH", "DD", "CEO", "IMO", "EV", "PM", "TD", "ALL", "USA", "IT",
LETTERS)
top5 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(5) %>%
pull(stock_mention)
top5
top10 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(10) %>%
pull(stock_mention)
top10
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
reddit_mentions %>%
filter(!(stock_mention %in% fp)) %>%
group_by(stock_mention) %>%
count() %>%
arrange(-n) %>%
print(n = 20)
tinytex::install_tinytex()
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()+bg="blue"
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention, bg="blue")) +
geom_line()
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention, bg="white")) +
geom_line()
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(bg="white", aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(bg="blue", aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
reddit_mention_counts + theme(panel.background = element_rect(fill = 'green', colour = 'red'))
reddit_mention_counts
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
myplot<-ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot <- reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot
plot + theme(panel.background = element_rect(fill = 'green', colour = 'red'))
plot + theme(panel.background = element_rect(fill = 'white', colour = 'black'))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(RedditExtractoR)
library(plotly)
library(TSstudio)
reddit <- readRDS("Data/reddit.RDS")%>%
as_tibble()
reddit$post_date <- as.Date(reddit$post_date,
format = "%d-%m-%y")
reddit$comm_date <- as.Date(reddit$comm_date,
format = "%d-%m-%y")
stocks <- read_csv("Data/stock_data.csv")
reddit_mentions <- readRDS("Data/reddit_mentions.RDS")
reddit_mention_counts <- reddit_mentions %>%
group_by(post_date, stock_mention) %>%
count()
fp <- c("RH", "DD", "CEO", "IMO", "EV", "PM", "TD", "ALL", "USA", "IT",
LETTERS)
top5 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(5) %>%
pull(stock_mention)
top10 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(10) %>%
pull(stock_mention)
top5
top10
plot <- reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
top5
top10
plot <- reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot
top5
top10
plot <- reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot + theme(panel.background = element_rect(fill = 'white', colour = 'black'))
plot
top5
top10
plot <- reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot + theme(panel.background = element_rect(fill = 'white', colour = 'black'))
View(reddit)
View(stocks)
View(reddit_mentions)
get_vader("just yoloed GME, will not sell before 420 fucking diamond hands")
library(tidyverse)
library(vader)
library(dplyr)
library(stringr)
reddit_mentions <- readRDS("C:/Users/Uebi Nubov/Desktop/Chiral Internship/Chiral_MemeStocks_code/Data/reddit_mentions.RDS")
get_vader("I like this stock")
get_vader("I really like this stock")
get_vader("would never buy this trash")
get_vader("abolute dog shit sucks")
get_vader("just yoloed GME, will not sell before 420 fucking diamond hands")
get_vader("SLV is a fake squeeze, hate hedge funds")
comments_sentiment <- readRDS("data/comments_sentiment.RDS")
reddit_mentions_sentiment <- reddit_mentions %>%
left_join(comments_sentiment %>% select(-comment_clean),
by = "comment")
reddit_sentiment_counts <- reddit_mentions_sentiment %>%
group_by(comm_date, stock_mention) %>%
summarise(sentiment = mean(sentiment),
n = n())
reddit_sentiment_counts %>%
filter(stock_mention == "TSLA") %>%
ggplot(aes(x = comm_date, y = sentiment)) +
geom_line() +
theme_classic()
top5 <- reddit_sentiment_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
head(5) %>%
pull(stock_mention)
reddit_sentiment_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = comm_date, y = sentiment, color = stock_mention)) +
# geom_line() +
geom_smooth(se = F) +
theme_classic()
reddit_mentions_sentiment %>%
saveRDS("data/reddit_mentions_sentiment.RDS")
library(tidyquant)
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Downloading Apple price using quantmod
getSymbols("AMC", from = '2020-11-01',
to = "2021-06-25",warnings = FALSE,
auto.assign = TRUE)
# Displaying AMC Price:
chart_Series(AMC)
chart_Series(AMC['2021-06-18/2021-06-25'])
reddit_sentiment_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = comm_date, y = sentiment, color = stock_mention)) +
# geom_line() +
geom_smooth(se = F) +
theme_classic()
options("getSymbols.warning4.0"=FALSE)
options("getSymbols.yahoo.warning"=FALSE)
# Downloading Apple price using quantmod
getSymbols("BB", from = '2020-11-01',
to = "2021-06-25",warnings = FALSE,
auto.assign = TRUE)
# Displaying BB Price:
chart_Series(BB)
chart_Series(BB['2021-06-18/2021-06-25'])
library(tidyverse)
library(RedditExtractoR)
library(plotly)
library(TSstudio)
reddit1 <- get_reddit(subreddit = "wallstreetbets", page_threshold = 2000)
reddit1 <- get_reddit(subreddit = "wallstreetbets", page_threshold = 10000)
View(reddit1)
View(reddit)
View(reddit1)
reddit_combined <- merge(reddit, reddit1, all=TRUE)
View(reddit_combined)
View(reddit_combined)
reddit1$post_date <- as.Date(reddit1$post_date,
format = "%d-%m-%y")
reddit1$comm_date <- as.Date(reddit1$comm_date,
format = "%d-%m-%y")
reddit_combined <- merge(reddit, reddit1, all=TRUE)
View(reddit_combined)
print(class(reddit_combined))
sapply(reddit_combined, class)
reddit_combined %>% saveRDS("Data/reddit_combined.RDS")
reddit <- readRDS("Data/reddit_combined.RDS")%>%
as_tibble()
stocks <- read_csv("Data/stock_data.csv")
reg_expression <- regex(paste0("\\b(?:",
paste(stocks$Symbol, collapse = "|"),
")\\b"))
reddit_mentions <- reddit %>%
mutate(stock_mention = str_extract_all(comment, reg_expression)) %>%
unnest(stock_mention)
reddit_mentions %>% saveRDS("Data/reddit_mentions.RDS")
reddit_mentions <- readRDS("Data/reddit_mentions.RDS")
reddit_mention_counts <- reddit_mentions %>%
group_by(post_date, stock_mention) %>%
count()
# false positives (non-stock related):
fp <- c("RH", "DD", "CEO", "IMO", "EV", "PM", "TD", "ALL", "USA", "IT",
LETTERS)
top5 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(5) %>%
pull(stock_mention)
top5
# false positives (non-stock related):
fp <- c("RH", "DD", "CEO", "IMO", "EV", "PM", "TD", "ALL", "USA", "IT", "WISH",
LETTERS)
top5 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(5) %>%
pull(stock_mention)
top5
top10 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(10) %>%
pull(stock_mention)
top10
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
View(reddit)
reddit_combined %>% saveRDS("Data/reddit_combined.RDS")
reddit %>% distinct(link, .keep_all = TRUE)
View(reddit)
reddit %>% distinct(link, .keep_all = TRUE)
reddit %>% unique(link, .keep_all = TRUE)
reddit[!duplicated(reddit$link),]
reddit5 <- reddit[!duplicated(reddit$link),]
View(reddit5)
View(reddit)
reddit5 <- reddit[!duplicated(reddit$comment),]
reddit_5 %>% saveRDS("Data/reddit_combined.RDS")
reddit5 %>% saveRDS("Data/reddit_combined.RDS")
reddit <- readRDS("Data/reddit_combined.RDS")%>%
as_tibble()
reg_expression <- regex(paste0("\\b(?:",
paste(stocks$Symbol, collapse = "|"),
")\\b"))
reddit_mentions <- reddit %>%
mutate(stock_mention = str_extract_all(comment, reg_expression)) %>%
unnest(stock_mention)
reddit_mentions %>% saveRDS("Data/reddit_mentions.RDS")
reddit_mentions <- readRDS("Data/reddit_mentions.RDS")
reddit_mention_counts <- reddit_mentions %>%
group_by(post_date, stock_mention) %>%
count()
# false positives (non-stock related):
fp <- c("RH", "DD", "CEO", "IMO", "EV", "PM", "TD", "ALL", "USA", "IT", "WISH",
LETTERS)
top5 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(5) %>%
pull(stock_mention)
top5
top10 <- reddit_mention_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(10) %>%
pull(stock_mention)
top10
reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot <- reddit_mention_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = post_date, y = n, color = stock_mention)) +
geom_line()
plot + theme(panel.background = element_rect(fill = 'white', colour = 'black'))
reddit_mentions %>%
filter(!(stock_mention %in% fp)) %>%
group_by(stock_mention) %>%
count() %>%
arrange(-n) %>%
print(n = 20)
library(tidyverse)
library(vader)
library(dplyr)
library(stringr)
# We found out which stocks get mentioned on WSB,
# but some mentions might be negative.
reddit_mentions <- readRDS("C:/Users/Uebi Nubov/Desktop/Chiral Internship/Chiral_MemeStocks_code/Data/reddit_mentions.RDS")
get_vader("I like this stock")
get_vader("I really like this stock")
get_vader("would never buy this trash")
get_vader("abolute dog shit sucks")
get_vader("just yoloed GME, will not sell before 420 fucking diamond hands")
get_vader("SLV is a fake squeeze, hate hedge funds")
comments_sentiment <- reddit_mentions %>%
select(comment) %>%
distinct() %>%
mutate(comment_clean = str_replace_all(comment, "\\\\", " ")) %>%
mutate(sentiment = vader_df(comment_clean)$compound)
comments_sentiment %>% saveRDS("data/comments_sentiment.RDS")
comments_sentiment <- readRDS("data/comments_sentiment.RDS")
reddit_mentions_sentiment <- reddit_mentions %>%
left_join(comments_sentiment %>% select(-comment_clean),
by = "comment")
reddit_sentiment_counts <- reddit_mentions_sentiment %>%
group_by(comm_date, stock_mention) %>%
summarise(sentiment = mean(sentiment),
n = n())
reddit_sentiment_counts %>%
filter(stock_mention == "TSLA") %>%
ggplot(aes(x = comm_date, y = sentiment)) +
geom_line() +
theme_classic()
top5 <- reddit_sentiment_counts %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
head(5) %>%
pull(stock_mention)
reddit_sentiment_counts %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = comm_date, y = sentiment, color = stock_mention)) +
# geom_line() +
geom_smooth(se = F) +
theme_classic()
reddit_mentions_sentiment %>%
saveRDS("data/reddit_mentions_sentiment.RDS")
library(tidyverse)
library(tidygraph)
reddit <- readRDS("Data/reddit.RDS")%>%
as_tibble()
reddit <- readRDS("Data/reddit_mentions.RDS")%>%
as_tibble()
View(reddit_mentions)
View(reddit5)
View(reddit)
reddit_5 %>% saveRDS("Data/reddit_mentions.RDS")
View(reddit5)
reddit_combined <- readRDS("C:/Users/Uebi Nubov/Desktop/Chiral Internship/Chiral_MemeStocks_code/Data/reddit_combined.RDS")
reddit <- readRDS("Data/reddit_mentions.RDS")%>%
as_tibble()
reddit <- readRDS("Data/reddit_combined.RDS")%>%
as_tibble()
user_postcount <- reddit %>%
group_by(user) %>%
count() %>%
arrange(-n)
library(RedditExtractoR)
net <- user_network(reddit)
net_tidy <- net$df %>%
transmute(from = sender, to = receiver) %>%
as_tbl_graph()
net_tidy %>% saveRDS("data/net_tidy.RDS")
net_tidy <- readRDS("data/net_tidy.RDS")
user_centralities <- net_tidy %>%
mutate(centrality = centrality_eigen()) %>%
as_tibble()
user_centralities <- user_centralities %>%
arrange(-centrality)
user_postcount %>%
left_join(user_centralities,
by = c("user" = "name")) %>%
arrange(-centrality) %>%
print(n = 20)
reddit_mentions_sentiment <- readRDS("../02-Meme-stocks-p2/data/reddit_mentions_sentiment.RDS")
reddit_sentiment_counts_wgt <- reddit_mentions_sentiment %>%
left_join(user_centralities,
by = c("user" = "name")) %>%
mutate(sentiment_wgt = sentiment*centrality) %>%
group_by(comm_date, stock_mention) %>%
summarise(sentiment_wgt = mean(sentiment_wgt),
sentiment = mean(sentiment),
n = n())
top5 <- reddit_sentiment_counts_wgt %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
head(10) %>%
pull(stock_mention)
reddit_sentiment_counts_wgt %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = comm_date, y = sentiment_wgt, color = stock_mention)) +
# geom_line() +
geom_smooth(se = F) +
theme_classic()
reddit_sentiment_counts_wgt %>%
filter(stock_mention %in% top5) %>%
# ggplot(aes(x = comm_date, y = sentiment_wgt, color = stock_mention)) +
ggplot(aes(x = comm_date, y = sentiment, color = stock_mention)) +
scale_x_date(date_breaks = "days")+
# geom_line() +
geom_smooth(se = F) +
theme_classic()
reddit_mentions_sentiment <- readRDS("../02-Meme-stocks-p2/data/reddit_mentions_sentiment.RDS")
reddit_mentions_sentiment <- readRDS("..Data/reddit_mentions_sentiment.RDS")
reddit_mentions_sentiment <- readRDS("C:/Users/Uebi Nubov/Desktop/Chiral Internship/Chiral_MemeStocks_code/Data")
reddit_mentions_sentiment <- readRDS("C:/Users/Uebi Nubov/Desktop/Chiral Internship/Chiral_MemeStocks_code/Data/reddit_mentions_sentiment.RDS")
reddit_sentiment_counts_wgt <- reddit_mentions_sentiment %>%
left_join(user_centralities,
by = c("user" = "name")) %>%
mutate(sentiment_wgt = sentiment*centrality) %>%
group_by(comm_date, stock_mention) %>%
summarise(sentiment_wgt = mean(sentiment_wgt),
sentiment = mean(sentiment),
n = n())
top5 <- reddit_sentiment_counts_wgt %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
head(10) %>%
pull(stock_mention)
reddit_sentiment_counts_wgt %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = comm_date, y = sentiment_wgt, color = stock_mention)) +
# geom_line() +
geom_smooth(se = F) +
theme_classic()
reddit_sentiment_counts_wgt %>%
filter(stock_mention %in% top5) %>%
# ggplot(aes(x = comm_date, y = sentiment_wgt, color = stock_mention)) +
ggplot(aes(x = comm_date, y = sentiment, color = stock_mention)) +
scale_x_date(date_breaks = "days")+
# geom_line() +
geom_smooth(se = F) +
theme_classic()
# false positives (non-stock related):
fp <- c("RH", "DD", "CEO", "IMO", "EV", "PM", "TD", "ALL", "USA", "IT", "WISH",
LETTERS)
top5 <- reddit_sentiment_counts_wgt %>%
group_by(stock_mention) %>%
summarise(n = sum(n)) %>%
ungroup() %>%
arrange(-n) %>%
filter(!(stock_mention %in% fp)) %>%
head(5) %>%
pull(stock_mention)
reddit_sentiment_counts_wgt %>%
filter(stock_mention %in% top5) %>%
ggplot(aes(x = comm_date, y = sentiment_wgt, color = stock_mention)) +
# geom_line() +
geom_smooth(se = F) +
theme_classic()
reddit_sentiment_counts_wgt %>%
filter(stock_mention %in% top5) %>%
# ggplot(aes(x = comm_date, y = sentiment_wgt, color = stock_mention)) +
ggplot(aes(x = comm_date, y = sentiment, color = stock_mention)) +
scale_x_date(date_breaks = "days")+
# geom_line() +
geom_smooth(se = F) +
theme_classic()
